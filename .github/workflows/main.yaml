name: comet-ci
on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:
  
  lint-code:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install pip dependencies
      run: pip install black

    - name: Check code with black
      run: black --check .

  run-tests:

    strategy:
      matrix:
        python-version: ["3.10", "3.13"]
        redis-version: ["5.0", "latest"]

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_USER: chime
          MYSQL_PASSWORD: chime
          MYSQL_ROOT_PASSWORD: chime
          MYSQL_DATABASE: chime
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Install redis tools to use redis-cli command
        run: sudo apt-get install -y redis-tools

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: pip install --upgrade pip

      - name: Install pip dependencies
        run: pip install -e .[test]
      
      - name: Set the redis client timeout to 40 seconds
        run: redis-cli -p 6379 config set timeout 40

      - name: Verify that redis is running
        run: redis-cli -p 6379 ping

      - name: Verify that the config has been set
        run: redis-cli -p 6379 config get timeout

      - name: Run tests
        env:
          REDIS_HOST: 0.0.0.0
          REDIS_PORT: 6379
        run: pytest -x --cov=comet tests/
        shell: bash

  # Run the comet related tests included in kotekan
  test-kotekan:
    strategy:
      matrix:
        python-version: ["3.10", "3.13"]
        redis-version: ["5.0", "latest"]

    runs-on: ubuntu-latest

    env:
      USE_CCACHE: 1
      CCACHE_SLOPPINESS: pch_defines,time_macros
      CCACHE_COMPRESS: 1
      CCACHE_MAXSIZE: 250M
      MAKEFLAGS: "-j 2"

    services:

      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install-apt-packages
        run: |
          sudo apt-get -y install libevent-dev libboost-test-dev findutils gcc

      - name: setup ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: setup-python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: install comet and test dependencies
        run: pip install -e .[test]

      - name: Checkout Kotekan
        uses: actions/checkout@v4
        with:
          repository: "kotekan/kotekan"
          path: "kotekan"
          ref: "2021.11b"

      - name: Build kotekan and tests
        run: |
          cd kotekan/build
          cmake -DWITH_TESTS=ON -DARCH=haswell -DCCACHE=ON ..
          make dataset_broker_producer dataset_broker_producer2 dataset_broker_consumer

      - name: Run comet tests from kotekan
        env:
          REDIS_HOST: 0.0.0.0
          REDIS_PORT: 6379
        run: |
          pip install future pytest-localserver
          cd kotekan/tests
          mkdir skyfield_data
          export PYTHONPATH=../python:$PYTHONPATH
          export CAPUT_SKYFIELD_PATH=skyfield_data
          pytest -x test_dataset_broker.py
